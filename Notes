04/23 

- Python is Dynamic typing meaning once a variable is assigned to a data type the same variable can be re-assigned to a differrent data type , whereas other languages 
  are static typing. 
 
  Ex: test = 1 , test = ["pass","fail"] 
  
 - Type function in python is used to describe the data type 
 
   Ex: usage a = 1 , type(a) 
   
- Indexing and Slicing

  Ex:  S U R Y A 
  
       0 1 2 3 4 <- indexing 
       
  usage : 
  
  - Slicing : syntax [start:stop:step] 
  
  start this is where we start the slicing and stop is where we stop and does not include that specific postion and step is the jump we take in slicing . 
  
  04/24
  
  - string concatenation 
    built in string functions Ex: upper , lower , split 
    
  04/25 
  
  To-do : check string formatting examples from notebook and practise 
  
  
  - string formatting 
  
    - .format() 
    - f-strings ( formatted string literals) - Practise on .format()  strings . 
    
    .format method , syntax: 'string here{} then also {}'.format('something1','something2')
    
    - Float formatting syntax : "{value:width.precision f}"
    
    - f-strings method
     
       Ex: name = "jose" 
       
       print (f'hello his name is {name}') 
       
       output - hello his name is jose
  
  04/26 
  
  - For more information on the string .format() method visit https://docs.python.org/3/library/string.html#formatstrings 
  - For more info on formatted string literals visit https://docs.python.org/3/reference/lexical_analysis.html#f-strings
  - HERE IS AN AWESOME SOURCE FOR PRINT FORMATTING: https://pyformat.info/ 
  - f-strings require Python 3.6 or higher.
  
  Lists : lists are mutable means objects in a list can be modified. 
  
  methods in list 
  
  - append
  - pop
  - sort 
  - reverse
  
  Nonetype : its a retrun value in python for a function or method that returns nothing.
  
  
  04/27
  
  - https://towardsdatascience.com/17-quick-examples-to-learn-python-lists-196070a055c3
  
  - Nested list 
  - list comprehension :  https://towardsdatascience.com/11-examples-to-master-python-list-comprehensions-33c681b56212
  
  Dictionaries : objects stored in Key : value pair , keys should always be a string and values are flexible 
  
  syntax: {'key1':'value1', 'key2':'value2'} 
  
  - Dictionaries can hold lists and other dictionaries 
  - ordereddict 
  - Dictionaries are mutable but keys in dictionaries are immutable meaning keys in dictionaries can only be strings , integer or tuples and cannot be modified.
  
  dictionaries vs list 
  
  - Dictionaries are unordered and cannot be sorted 
  - lists are ordered sequence that can be indexed or sliced .
  
  04/29 
  
  Dictionaries - https://www.freecodecamp.org/news/python-dictionaries-detailed-visual-introduction/
  
  Tuples :
  
  - Tuples are immutable where as lists are mutale , meaning elements in tuples cannot be changes wheres as items in lists can be changes.
  
  
 sets:
 
 - Elements in set need to have a unique value 
 
 - Opening and reading a file in Python . 
 
 05/1
 
 list vs dcitionaries vs tuples - TBD 
  
  
 
 
 
    
